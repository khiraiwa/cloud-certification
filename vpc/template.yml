AWSTemplateFormatVersion: '2010-09-09'
Description: VPC Sample

Parameters:
  VpcName:
    Description: Please input VPC name.
    Type: String
    Default: sample-vpc
    AllowedPattern: '[-a-zA-Z0-9]*'
  VpcCidrBlock:
    Type: String
    Description: Please input an IP range in VPC.
    Default: 10.0.0.0/16
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/16

  VpcSubnetNamePrivate1a:
    Description: Please input the subnet name.
    Type: String
    Default: sample-vpc-private-subnet-1a
    AllowedPattern: '[-a-zA-Z0-9]*'
  VpcSubnetCidrBlockPrivate1a:
    Type: String
    Description: Please input an IP range.
    Default: 10.0.1.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/24
  VpcSubnetNamePrivate1b:
    Description: Please input the subnet name.
    Type: String
    Default: sample-vpc-private-subnet-1a
    AllowedPattern: '[-a-zA-Z0-9]*'
  VpcSubnetCidrBlockPrivate1b:
    Type: String
    Description: Please input an IP range.
    Default: 10.0.2.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/24
  VpcSubnetNamePrivate1c:
    Description: Please input the subnet name of private-subnet-1c.
    Type: String
    Default: sample-vpc-private-subnet-1c
    AllowedPattern: '[-a-zA-Z0-9]*'
  VpcSubnetCidrBlockPrivate1c:
    Type: String
    Description: Please input an IP range in sample-vpc-private-subnet-1c.
    Default: 10.0.3.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/24

  VpcSubnetNamePublic1a:
    Description: Please input the subnet name.
    Type: String
    Default: sample-vpc-public-subnet-1a
    AllowedPattern: '[-a-zA-Z0-9]*'
  VpcSubnetCidrBlockPublic1a:
    Type: String
    Description: Please input an IP range in sample-vpc-public-subnet-1a.
    Default: 10.0.4.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/24
  VpcSubnetNamePublic1b:
    Description: Please input the subnet name.
    Type: String
    Default: sample-vpc-public-subnet-1b
    AllowedPattern: '[-a-zA-Z0-9]*'
  VpcSubnetCidrBlockPublic1b:
    Type: String
    Description: Please input an IP range.
    Default: 10.0.5.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/24
  VpcSubnetNamePublic1c:
    Description: Please input the subnet name.
    Type: String
    Default: sample-vpc-public-subnet-1c
    AllowedPattern: '[-a-zA-Z0-9]*'
  VpcSubnetCidrBlockPublic1c:
    Type: String
    Description: Please input an IP range.
    Default: 10.0.6.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/24

  InternetGatewayName:
    Description: Please input the name of Internet Gateway.
    Type: String
    Default: sample-vpc-igw
    AllowedPattern: '[-a-zA-Z0-9]*'
  VpcAzs: 
    Description: "Comma-delimited list of VpcAzs suffix"
    Type: CommaDelimitedList
    Default: "a, b, c"

Mappings: {}

Resources:
################################
#### VPC
################################
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: VpcCidrBlock
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
      - Key: Name
        Value:
          Ref: VpcName

################################
#### Public Subnet
################################
  SubnetPublic1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: !Sub
      - "${AWS::Region}${AZ}"
      - AZ: !Select [0, !Ref VpcAzs]
      CidrBlock:
        Ref: VpcSubnetCidrBlockPublic1a
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value:
          Ref: VpcSubnetNamePublic1a
  SubnetPublic1b:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: !Sub
      - "${AWS::Region}${AZ}"
      - AZ: !Select [1, !Ref VpcAzs]
      CidrBlock:
        Ref: VpcSubnetCidrBlockPublic1b
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value:
          Ref: VpcSubnetNamePublic1b
  SubnetPublic1c:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: !Sub
      - "${AWS::Region}${AZ}"
      - AZ: !Select [2, !Ref VpcAzs]
      CidrBlock:
        Ref: VpcSubnetCidrBlockPublic1c
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value:
          Ref: VpcSubnetNamePublic1c

################################
#### Private Subnet
################################
  SubnetPrivate1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: !Sub
      - "${AWS::Region}${AZ}"
      - AZ: !Select [1, !Ref VpcAzs]
      CidrBlock:
        Ref: VpcSubnetCidrBlockPrivate1a
      Tags:
      - Key: Name
        Value:
          Ref: VpcSubnetNamePrivate1a
  SubnetPrivate1b:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: !Sub
      - "${AWS::Region}${AZ}"
      - AZ: !Select [1, !Ref VpcAzs]
      CidrBlock:
        Ref: VpcSubnetCidrBlockPrivate1b
      Tags:
      - Key: Name
        Value:
          Ref: VpcSubnetNamePrivate1b
  SubnetPrivate1c:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: !Sub
      - "${AWS::Region}${AZ}"
      - AZ: !Select [1, !Ref VpcAzs]
      CidrBlock:
        Ref: VpcSubnetCidrBlockPrivate1c
      Tags:
      - Key: Name
        Value:
          Ref: VpcSubnetNamePrivate1c

################################
#### InternetGateway
################################
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value:
          Ref: InternetGatewayName
  GatewayToInternet:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

################################
#### Public Subnet RouteTable
################################
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackId
      - Key: Network
        Value: Public
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  PublicSubnetRouteTableAssociatio1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPublic1a
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnetRouteTableAssociation1b:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPublic1b
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnetRouteTableAssociation1c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPublic1c
      RouteTableId:
        Ref: PublicRouteTable

################################
#### Public NetworkAcl
################################
  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC

  # 外から内への通信はすべて許可
  PublicNetworkAclEntryEgress:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId:
        Ref: PublicNetworkAcl
      Protocol: -1 # すべてのプロトコル
      RuleAction: allow
      RuleNumber: 100

  # 内から外への通信はtcp/80, tcp/443
  PublicNetworkAclEntryIngress1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId:
        Ref: PublicNetworkAcl
      Protocol: 6
      RuleAction: allow
      PortRange :
        From: 80
        To: 80
      Egress: true      
      RuleNumber: 100
  PublicNetworkAclEntryIngress2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId:
        Ref: PublicNetworkAcl
      Protocol: 6
      RuleAction: allow
      PortRange :
        From: 443
        To: 443
      Egress : true
      RuleNumber: 200
  PublicNetworkAclEntryIngress3:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId:
        Ref: PublicNetworkAcl
      Protocol: 1
      RuleAction: allow
      Icmp:
        Code: -1
        Type: 0
      Egress: true
      RuleNumber: 300
  PublicNetworkAclEntryIngress4:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId:
        Ref: PublicNetworkAcl
      Protocol: 6
      RuleAction: allow
      PortRange :
        From: 1024
        To: 65535
      Egress : true
      RuleNumber: 400
    
  PublicSubnetNetworkAclAssociatio1a:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: SubnetPublic1a
      NetworkAclId:
        Ref: PublicNetworkAcl
  PublicSubnetNetworkAclAssociatio1b:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: SubnetPublic1b
      NetworkAclId:
        Ref: PublicNetworkAcl
  PublicSubnetNetworkAclAssociatio1c:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: SubnetPublic1c
      NetworkAclId:
        Ref: PublicNetworkAcl

################################
#### Private Subnet RouteTable
################################
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackId
      - Key: Network
        Value: Private
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NAT

  PrivateSubnetRouteTableAssociatio1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPrivate1a
      RouteTableId:
        Ref: PrivateRouteTable
  PrivateSubnetRouteTableAssociation1b:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPrivate1b
      RouteTableId:
        Ref: PrivateRouteTable
  PrivateSubnetRouteTableAssociation1c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPrivate1c
      RouteTableId:
        Ref: PrivateRouteTable

################################
#### Private NetworkAcl
################################
  PrivateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC

  # 外から内への通信はすべて許可
  PrivateNetworkAclEntryEgress:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId:
        Ref: PrivateNetworkAcl
      Protocol: -1 # すべてのプロトコル
      RuleAction: allow
      RuleNumber: 100

  # 内から外への通信はtcp/80, tcp/443
  PrivateNetworkAclEntryIngress1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId:
        Ref: PrivateNetworkAcl
      Protocol: 6
      RuleAction: allow
      PortRange :
        From: 80
        To: 80
      Egress: true      
      RuleNumber: 100
  PrivateNetworkAclEntryIngress2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId:
        Ref: PrivateNetworkAcl
      Protocol: 6
      RuleAction: allow
      PortRange :
        From: 443
        To: 443
      Egress : true
      RuleNumber: 200
  PrivateNetworkAclEntryIngress3:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId:
        Ref: PrivateNetworkAcl
      Protocol: 1
      RuleAction: allow
      Icmp:
        Code: -1
        Type: 0
      Egress: true
      RuleNumber: 300
  PrivateNetworkAclEntryIngress4:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId:
        Ref: PrivateNetworkAcl
      Protocol: 6
      RuleAction: allow
      PortRange :
        From: 1024
        To: 65535
      Egress : true
      RuleNumber: 400

  PrivateSubnetNetworkAclAssociatio1a:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: SubnetPrivate1a
      NetworkAclId:
        Ref: PrivateNetworkAcl
  PrivateSubnetNetworkAclAssociatio1b:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: SubnetPrivate1b
      NetworkAclId:
        Ref: PrivateNetworkAcl
  PrivateSubnetNetworkAclAssociatio1c:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: SubnetPrivate1c
      NetworkAclId:
        Ref: PrivateNetworkAcl

################################
#### NatGateway
################################
  NAT:
    DependsOn: EIPNAT # 他のリソースに続けて作成される
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        !GetAtt EIPNAT.AllocationId
      SubnetId:
        Ref: SubnetPublic1a
  EIPNAT:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

################################
#### Outputs
################################
Outputs:
  OutputVpc:
    Description: "VPC ID = "
    Value:
      Ref: VPC
